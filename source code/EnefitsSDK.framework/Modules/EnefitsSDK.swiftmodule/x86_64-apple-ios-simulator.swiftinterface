// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name EnefitsSDK
import CryptoKit
@_exported import EnefitsSDK
import Foundation
import LocalAuthentication
import Swift
import UIKit
import WalletConnectSwift
import _Concurrency
public protocol EnefitsProtocols {
  static var shared: EnefitsSDK.EnefitsProtocols { get }
  func present(from parentController: UIKit.UIViewController, apiKeyString: Swift.String, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  func dismiss()
  var apiKeyString: Swift.String? { get set }
  var appNameString: Swift.String? { get set }
  var isInitComplete: Swift.Bool? { get set }
  var isAccountConnected: Swift.Bool? { get set }
  var isToConnectWithWallet: Swift.Bool? { get set }
  var walletConnect: EnefitsSDK.EnefitsWalletConnect? { get set }
  func getOffers(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  func initialiseSDK(name: Swift.String?, apiKey: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  func getConnectAccount(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.String, Any) -> Swift.Void)
  func getChainData(apiKeyString: Swift.String?, completionHandler handler: @escaping (Any?) -> Swift.Void)
  func disconnect(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  var isConnectedWithWallet: ((Swift.Bool?) -> ())? { get set }
}
@_hasMissingDesignatedInitializers public class EnefitsWalletConnect {
  public var session: WalletConnectSwift.Session!
  @objc deinit
}
extension EnefitsSDK.EnefitsWalletConnect : WalletConnectSwift.ClientDelegate {
  public func client(_ client: WalletConnectSwift.Client, didFailToConnect url: WalletConnectSwift.WCURL)
  public func client(_ client: WalletConnectSwift.Client, didConnect url: WalletConnectSwift.WCURL)
  public func client(_ client: WalletConnectSwift.Client, didConnect session: WalletConnectSwift.Session)
  public func client(_ client: WalletConnectSwift.Client, didDisconnect session: WalletConnectSwift.Session)
  public func client(_ client: WalletConnectSwift.Client, didUpdate session: WalletConnectSwift.Session)
}
public class Enefits : EnefitsSDK.EnefitsProtocols {
  public static var shared: EnefitsSDK.EnefitsProtocols
  public init()
  public var walletConnect: EnefitsSDK.EnefitsWalletConnect?
  public var apiKeyString: Swift.String?
  public var appNameString: Swift.String?
  public var isInitComplete: Swift.Bool?
  public var isAccountConnected: Swift.Bool?
  public var isConnectedWithWallet: ((Swift.Bool?) -> ())?
  public var isToConnectWithWallet: Swift.Bool?
  public func initialiseSDK(name: Swift.String?, apiKey: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  public func present(from parentController: UIKit.UIViewController, apiKeyString: Swift.String, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  public func getOffers(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  public func disconnect(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.Bool, Swift.String) -> Swift.Void)
  public func getConnectAccount(apiKeyString: Swift.String?, completionHandler handler: @escaping (Swift.String, Any) -> Swift.Void)
  public func getChainData(apiKeyString: Swift.String?, completionHandler handler: @escaping (Any?) -> Swift.Void)
  public func dismiss()
  @objc deinit
}
